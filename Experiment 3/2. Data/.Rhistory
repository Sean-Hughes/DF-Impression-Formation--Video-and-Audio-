files.temp <- c("raw/Experiment_3_Genuine_data.zip", "raw/Experiment_3_DF_data.zip")
unzip(files.temp, exdir = "raw")
files.temp <- c("raw/")
unzip(files.temp, exdir = "raw")
files.temp <- c("raw/Experiment_3_Genuine_data.zip", "raw/Experiment_3_DF_data.zip")
unzip(files.temp, exdir = "raw")
files.temp <- c("raw/Experiment_3_Genuine_data.zip")
unzip(files.temp, exdir = "raw")
genuine_data <- c("raw/Experiment_3_Genuine_data.zip")
unzip(genuine_data, exdir = "raw")
genuine_data <- c("raw/Experiment_3_Genuine_data.zip")
unzip(genuine_data, exdir = "raw")
deepfaked_data <- c("raw/Experiment_3_DF_data.zip")
unzip(deepfaked_data, exdir = "raw")
rm(genuine_data, deepfaked_data)
# Github does not play nicely with files > 100mb. So I compressed the data files so they could be uploaded. You need to uncompress them to run the code chunks below
genuine_data <- c("raw/Experiment_3_Genuine_data.zip")
unzip(genuine_data, exdir = "raw")
deepfaked_data <- c("raw/Experiment_3_DF_data.zip")
unzip(deepfaked_data, exdir = "raw")
rm(genuine_data, deepfaked_data)
library(tidyverse)
library(readxl)
library(ggthemes)
library(knitr)
library(kableExtra)
library(IATscores)
library(pacman)
library(RSQLite)
library(jsonlite)
library(janitor)
library(Hmisc)
library(ggplot2)
library(haven)
library(IATscores)
# Used to reduce unique ids to a smaller number
count_unique <- function(x) {
return(length(unique(x)))
}
information_preserved <- function(x, length) {
return(
count_unique(str_sub(x, end=i)) ==
count_unique(x)
)
}
# used to extract the JSON data
parseJSON <- function(input) {
return(input %>%
fromJSON(flatten=T) %>% {
# Coerce lists
if (class(.) == 'list') {
discard(., is.null) %>%
as_tibble()
} else {
.
} } %>%
# Sanitize names
janitor::clean_names() %>%
# Use only strings for now, and re-encode types later
mutate_all(as.character))
}
# 'Connect' to database
connection <- dbConnect(
drv=RSQLite::SQLite(),
dbname= "raw/Experiment_3_Genuine_data.sqlite")
# Extract main table
database_genuine_videos <- dbGetQuery(
conn=connection,
statement='SELECT * FROM labjs')
# Close connection
dbDisconnect(
conn=connection)
# Discard connection
rm(connection)
